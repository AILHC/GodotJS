
Core:
    ✔ directly use typescripts in `godot editor`, hide compiled results (.js files) @done(24-07-08)
    ✔ global scope defined constants (such as PropertyHint) @done
    ☐ source-map: incorrect Ln:Col on bundle scripts
    ✔ exception is swallowed if thrown in GodotJS ScriptInstance::callp method @started(24-04-30 17:52) @done(24-07-05 21:42)
    ☐ SArray: return a simple wrapper with address guarded scope instead of a barebone reference? (`Env::get_object_class` etc.)
    ☐ errors on script reloading
    ☐ codegen: generate `signal` with type annotation for arguments
    ✔ codegen: accept JS Array as godot packed array @done(24-07-16)
    ✔ output verbose log into stdout only @done(24-07-04)
    ✔ release cached methods on script reloading @done(24-07-04)
    ✔ expose indexed accesor of godot primitive types (set_indexed/get_indexed) @done(24-07-05)
    ✔ optimize godot primitive bindings lifecycle @done(24-07-04)
    ✔ codegen: not to overwrite tsconfig.json and package.json when installing presets @done(24-06-21)
    ✔ issue: `new Object()` is unexpectedly garbage collected without a `free` call @done(24-06-15 15:30)
    ✔ optionally ignore methods which already covered by property getset @done(24-07-12 22:31)
    ✔ codegen: mark `signal` as readonly in d.ts @done(24-06-15)
    ✔ define `jsb` functions in a module (instead of in a global namespace) @done(24-06-05)
    ✔ github actions: build with godot engine @done(24-06-15)
    ✔ add `node_modules` into search paths (editor only?) @done(24-06-12)
    ✔ `PackedByteArray` to `ArrayBuffer` converter @done(24-06-05)
    ✔ essential operator bindings of primitive types @done(24-06-03 19:17)
    ✔ godot.Variant.Type/Operator are not exposed (because `Variant` itself does not exist in js) @done(24-05-30)
    ✔ remove redundant enum declaration in godot.minimal.d.ts @done(24-05-30)
    ✔ global enums binding @done(24-05-30)
    ✔ exported property: enum value support @done(24-05-30)
    ✔ exported property: flags value support @done(24-05-30)
    ✔ `Object.free()` binding @done(24-05-27)
    ✔ `is_instance_valid(obj)` @done(24-05-27)
    ✔ source-map: configurable in project settings @done(24-05-16 16:45)
    ✔ generate JSB_ options in jsb.gen.h (get rid of project scope defines) @done(24-05-12 08:17)
    ✔ codegen: primitive constructor declarations @done(24-04-21 10:58)
    ✔ codegen: defulat argument values @done(24-05-23)
    ✔ `console.log` prints readable strings for godot `Object` and `Variant`  @done(24-05-23)

Scripting:
    ✔ unexpected reloading (only datetime changed) @done(24-07-16)
    ☐ add `preload` support
    ✔ check if `call_prelude` is called even if `_ready` is not defined in script @done(24-07-10)
    ✔ scriptable EditorInspectorPlugin @done(24-07-12 21:45)
    ✔ scriptable EditorPlugin @done(24-07-16)
    ☐ REPL: retrieve input history with `up/down` key
    ✔ default value of gd exported property (for PlaceholderScriptInstance, used in editor inspector) @started(24-05-11) @done(24-05-29)
    ✔ handle default argument values when calling Variant type methods @done(24-05-23)
    ✔ handle default argument values when calling Object type methods (such as `MethodBind.default_arguments` in `_godot_object_method`) @done(24-05-23)
    ✔ handle varargs when calling Variant type methods @done(24-05-17 19:15)
    ✔ handle varargs when calling Object type methods @done(24-05-23 12:09)
    ✔ crash on calling ResourceLoader.load @done(24-04-30 17:51)
    ✔ Variant pool (no threading since environment scoped) @done(24-04-21 21:53)
    ✔ signal decalaration in scripts @done(24-04-23 18:33)
    ✔ support the function `define(...)` (from AMD module standard) @done(24-04-02 17:16)
    ✔ gd exported property in scripts @done(24-04-27 20:58)
    ✔ `tool` annotated scripts @done(24-05-15)
    ✔ onready gd var in scripts @done(24-05-11 17:45)
    ✔ NodePath support @done(24-04-27 20:58)
    ✔ StringName support (treated as javascript string) @done(24-04-27 20:59)
    ✔ random crash on compiling scripts in ResourceLoader (due to multi-threading) @done(24-05-16 13:29)
    ✔ implement `can_convert_strict` @done(24-05-10 15:11)
    ✔ can not access static members (nested enum, constants) of exposed godot singleton objects @done(24-04-30 17:53)
    ✔ static functions not found after exposing @done(24-04-30 17:52)
    ✔ move `VariantInfoCollection` instance into `Environment` @started(24-05-11 10:04) @done(24-05-11 17:44) @lasted(7h40m44s)
    ✔ confirm to overwrite if files exist when installing TS project presets @done(24-04-23 10:55)
    ✔ install TS project with presets @started(24-04-02 17:17) @done(24-04-03 11:55) @lasted(18h38m21s)

REPL:
    ✔ auto-complete when input text changed @done(24-05-29)
    ✔ print all internal logs in REPL panel during REPL eval @done(24-06-03 19:18)
    ✔ print godot things in the way of godot itself @done(24-06-15 15:31)
    ☐ print object details in REPL output (as JSON?)
    ☐ completely re-implement the bottom panel in typescript if possible
    
IDEA:
    ☐ nodejs integration (editor only?)
    ☐ libffi support
    ☐ try: provide a quickjs-v8 minimal implementation to support quickjs without rewriting all bridging code
